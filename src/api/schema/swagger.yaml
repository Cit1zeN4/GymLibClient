openapi: 3.0.1
info:
  title: 'GymLibAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
  version: '1.0'
paths:
  /article/list:
    post:
      tags:
        - Article
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ArticleListRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ArticleListRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ArticleListRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleEntityResponseData'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleEntityResponseData'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleEntityResponseData'
  /article:
    get:
      tags:
        - Article
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleEntity'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleEntity'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleEntity'
    post:
      tags:
        - Article
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleEntity'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleEntity'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    put:
      tags:
        - Article
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    delete:
      tags:
        - Article
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /list:
    post:
      tags:
        - Exercise
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ExerciseListRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ExerciseListRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExerciseListRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExerciseEntityResponseData'
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseEntityResponseData'
            text/json:
              schema:
                $ref: '#/components/schemas/ExerciseEntityResponseData'
  '/{id}':
    get:
      tags:
        - Exercise
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExerciseEntity'
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseEntity'
            text/json:
              schema:
                $ref: '#/components/schemas/ExerciseEntity'
  '/{slug}':
    get:
      tags:
        - Exercise
      parameters:
        - name: slug
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExerciseEntity'
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseEntity'
            text/json:
              schema:
                $ref: '#/components/schemas/ExerciseEntity'
  /tags:
    get:
      tags:
        - Exercise
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
  /feed:
    post:
      tags:
        - Feed
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FeedListRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/FeedListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/FeedListRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FeedListRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleEntityResponseData'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleEntityResponseData'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleEntityResponseData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /food:
    get:
      tags:
        - Food
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FoodResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/FoodResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/FoodResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    post:
      tags:
        - Food
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateFoodRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFoodRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateFoodRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateFoodRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FoodResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/FoodResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/FoodResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    put:
      tags:
        - Food
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateFoodRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFoodRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateFoodRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateFoodRequest'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    delete:
      tags:
        - Food
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /food/product-list:
    post:
      tags:
        - Food
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductListRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductListRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductListRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductEntityResponseData'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductEntityResponseData'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductEntityResponseData'
  /food/list:
    post:
      tags:
        - Food
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FoodListRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/FoodListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/FoodListRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FoodListRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FoodShortDtoResponseData'
            application/json:
              schema:
                $ref: '#/components/schemas/FoodShortDtoResponseData'
            text/json:
              schema:
                $ref: '#/components/schemas/FoodShortDtoResponseData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /register:
    post:
      tags:
        - 'GymLibAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
  /login:
    post:
      tags:
        - 'GymLibAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
      parameters:
        - name: useCookies
          in: query
          style: form
          schema:
            type: boolean
        - name: useSessionCookies
          in: query
          style: form
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
  /refresh:
    post:
      tags:
        - 'GymLibAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
  /confirmEmail:
    get:
      tags:
        - 'GymLibAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
      operationId: MapIdentityApi-/confirmEmail
      parameters:
        - name: userId
          in: query
          style: form
          schema:
            type: string
        - name: code
          in: query
          style: form
          schema:
            type: string
        - name: changedEmail
          in: query
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
  /resendConfirmationEmail:
    post:
      tags:
        - 'GymLibAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendConfirmationEmailRequest'
      responses:
        '200':
          description: Success
  /forgotPassword:
    post:
      tags:
        - 'GymLibAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
  /resetPassword:
    post:
      tags:
        - 'GymLibAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
  /manage/2fa:
    post:
      tags:
        - 'GymLibAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwoFactorRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwoFactorResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '404':
          description: Not Found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /manage/info:
    get:
      tags:
        - 'GymLibAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '404':
          description: Not Found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    post:
      tags:
        - 'GymLibAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfoRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '404':
          description: Not Found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /sleep:
    get:
      tags:
        - Sleep
      parameters:
        - name: dateStart
          in: query
          style: form
          schema:
            type: string
            format: date-time
        - name: dateEnd
          in: query
          style: form
          schema:
            type: string
            format: date-time
        - name: skip
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: take
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SleepResponseResponseData'
            application/json:
              schema:
                $ref: '#/components/schemas/SleepResponseResponseData'
            text/json:
              schema:
                $ref: '#/components/schemas/SleepResponseResponseData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    post:
      tags:
        - Sleep
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SleepRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SleepRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SleepRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SleepRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SleepResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SleepResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SleepResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    put:
      tags:
        - Sleep
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SleepUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SleepUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SleepUpdateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SleepUpdateRequest'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    delete:
      tags:
        - Sleep
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /stat/food:
    get:
      tags:
        - Stat
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FoodStat'
            application/json:
              schema:
                $ref: '#/components/schemas/FoodStat'
            text/json:
              schema:
                $ref: '#/components/schemas/FoodStat'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /stat/sleep:
    get:
      tags:
        - Stat
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SleepStat'
            application/json:
              schema:
                $ref: '#/components/schemas/SleepStat'
            text/json:
              schema:
                $ref: '#/components/schemas/SleepStat'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /training:
    get:
      tags:
        - Training
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TrainingFullResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingFullResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TrainingFullResponse'
    post:
      tags:
        - Training
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TrainingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TrainingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TrainingRequest'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    put:
      tags:
        - Training
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TrainingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TrainingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TrainingRequest'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    delete:
      tags:
        - Training
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /training/user-trainings:
    get:
      tags:
        - Training
      parameters:
        - name: userId
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: skip
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: take
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TrainingSetShortDtoResponseData'
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingSetShortDtoResponseData'
            text/json:
              schema:
                $ref: '#/components/schemas/TrainingSetShortDtoResponseData'
  /user/list:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserListRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UserListRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserListRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserShortDtoResponseData'
            application/json:
              schema:
                $ref: '#/components/schemas/UserShortDtoResponseData'
            text/json:
              schema:
                $ref: '#/components/schemas/UserShortDtoResponseData'
  /user/follow:
    post:
      tags:
        - User
      parameters:
        - name: userId
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /user/unfollow:
    post:
      tags:
        - User
      parameters:
        - name: userId
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  /user/me:
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserShortDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UserShortDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UserShortDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
    put:
      tags:
        - User
      parameters:
        - name: newName
          in: query
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserShortDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UserShortDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UserShortDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
components:
  schemas:
    AccessTokenResponse:
      type: object
      properties:
        tokenType:
          type: string
          nullable: true
          readOnly: true
        accessToken:
          type: string
          nullable: true
        expiresIn:
          type: integer
          format: int64
        refreshToken:
          type: string
          nullable: true
      additionalProperties: false
    ArticleEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        userId:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/UserEntity'
        views:
          type: integer
          format: int32
      additionalProperties: false
    ArticleEntityResponseData:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        records:
          type: array
          items:
            $ref: '#/components/schemas/ArticleEntity'
          nullable: true
      additionalProperties: false
    ArticleListRequest:
      type: object
      properties:
        skip:
          type: integer
          format: int32
        take:
          type: integer
          format: int32
        search:
          type: string
          nullable: true
        orderBy:
          $ref: '#/components/schemas/ArticleOrderByType'
        orderDirection:
          $ref: '#/components/schemas/OrderDirectionType'
      additionalProperties: false
    ArticleOrderByType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    ArticleRequest:
      required:
        - text
        - title
      type: object
      properties:
        title:
          minLength: 1
          type: string
        text:
          minLength: 1
          type: string
      additionalProperties: false
    CreateFoodRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductWeightShortDto'
          nullable: true
      additionalProperties: false
    ExerciseEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        begginer:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
      additionalProperties: false
    ExerciseEntityResponseData:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        records:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseEntity'
          nullable: true
      additionalProperties: false
    ExerciseListRequest:
      type: object
      properties:
        skip:
          type: integer
          format: int32
        take:
          type: integer
          format: int32
        search:
          type: string
          nullable: true
        searchBy:
          $ref: '#/components/schemas/ExerciseSearchByType'
        orderBy:
          $ref: '#/components/schemas/ExerciseOrderByType'
        orderDirection:
          $ref: '#/components/schemas/OrderDirectionType'
      additionalProperties: false
    ExerciseOrderByType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    ExerciseSearchByType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    FeedListRequest:
      type: object
      properties:
        skip:
          type: integer
          format: int32
        take:
          type: integer
          format: int32
      additionalProperties: false
    FoodDayStatDto:
      type: object
      properties:
        date:
          type: string
          format: date-time
        toDayList:
          type: array
          items:
            $ref: '#/components/schemas/FoodShortDto'
          nullable: true
      additionalProperties: false
    FoodEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductWeightEntity'
          nullable: true
        userId:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/UserEntity'
      additionalProperties: false
    FoodListRequest:
      type: object
      properties:
        skip:
          type: integer
          format: int32
        take:
          type: integer
          format: int32
        search:
          type: string
          nullable: true
        dateStart:
          type: string
          format: date-time
          nullable: true
        dateEnd:
          type: string
          format: date-time
          nullable: true
        orderBy:
          $ref: '#/components/schemas/FoodOrderType'
        orderDirection:
          $ref: '#/components/schemas/OrderDirectionType'
      additionalProperties: false
    FoodOrderType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    FoodResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
          nullable: true
      additionalProperties: false
    FoodShortDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        proteins:
          type: number
          format: float
        fats:
          type: number
          format: float
        carbohydrates:
          type: number
          format: float
        kcal:
          type: number
          format: float
      additionalProperties: false
    FoodShortDtoResponseData:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        records:
          type: array
          items:
            $ref: '#/components/schemas/FoodShortDto'
          nullable: true
      additionalProperties: false
    FoodStat:
      type: object
      properties:
        toDay:
          $ref: '#/components/schemas/NutritionalValue'
        toDayLits:
          $ref: '#/components/schemas/FoodDayStatDto'
        lastWeek:
          $ref: '#/components/schemas/NutritionalValue'
        lastWeekList:
          type: array
          items:
            $ref: '#/components/schemas/FoodDayStatDto'
          nullable: true
      additionalProperties: false
    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
      additionalProperties: false
    HttpValidationProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: { }
    InfoRequest:
      type: object
      properties:
        newEmail:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
        oldPassword:
          type: string
          nullable: true
      additionalProperties: false
    InfoResponse:
      type: object
      properties:
        email:
          type: string
          nullable: true
        isEmailConfirmed:
          type: boolean
      additionalProperties: false
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        twoFactorCode:
          type: string
          nullable: true
        twoFactorRecoveryCode:
          type: string
          nullable: true
      additionalProperties: false
    NutritionalValue:
      type: object
      properties:
        proteins:
          type: number
          format: float
        fats:
          type: number
          format: float
        carbohydrates:
          type: number
          format: float
        kcal:
          type: number
          format: float
      additionalProperties: false
    OrderDirectionType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    ProductEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        proteins:
          type: number
          format: float
        fats:
          type: number
          format: float
        carbohydrates:
          type: number
          format: float
        kcal:
          type: number
          format: float
        foods:
          type: array
          items:
            $ref: '#/components/schemas/FoodEntity'
          nullable: true
      additionalProperties: false
    ProductEntityResponseData:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        records:
          type: array
          items:
            $ref: '#/components/schemas/ProductEntity'
          nullable: true
      additionalProperties: false
    ProductListRequest:
      type: object
      properties:
        skip:
          type: integer
          format: int32
        take:
          type: integer
          format: int32
        search:
          type: string
          nullable: true
        orderBy:
          $ref: '#/components/schemas/ProductOrderType'
        orderDirection:
          $ref: '#/components/schemas/OrderDirectionType'
      additionalProperties: false
    ProductOrderType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        proteins:
          type: number
          format: float
        fats:
          type: number
          format: float
        carbohydrates:
          type: number
          format: float
        kcal:
          type: number
          format: float
        weight:
          type: number
          format: float
      additionalProperties: false
    ProductWeightEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        productId:
          type: integer
          format: int32
        product:
          $ref: '#/components/schemas/ProductEntity'
        weight:
          type: number
          format: float
      additionalProperties: false
    ProductWeightShortDto:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        weight:
          type: number
          format: float
      additionalProperties: false
    RefreshRequest:
      type: object
      properties:
        refreshToken:
          type: string
          nullable: true
      additionalProperties: false
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    ResendConfirmationEmailRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
      additionalProperties: false
    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        resetCode:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
      additionalProperties: false
    SleepDayStatDto:
      type: object
      properties:
        date:
          type: string
          format: date-time
        value:
          type: number
          format: float
      additionalProperties: false
    SleepRequest:
      type: object
      properties:
        value:
          type: number
          format: float
        date:
          type: string
          format: date-time
      additionalProperties: false
    SleepResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        value:
          type: number
          format: float
        date:
          type: string
          format: date-time
      additionalProperties: false
    SleepResponseResponseData:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        records:
          type: array
          items:
            $ref: '#/components/schemas/SleepResponse'
          nullable: true
      additionalProperties: false
    SleepStat:
      type: object
      properties:
        toDay:
          type: number
          format: float
        lastWeek:
          type: array
          items:
            $ref: '#/components/schemas/SleepDayStatDto'
          nullable: true
      additionalProperties: false
    SleepUpdateRequest:
      type: object
      properties:
        value:
          type: number
          format: float
          nullable: true
        date:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    TrainingFullResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        isPublic:
          type: boolean
        authorId:
          type: integer
          format: int32
        sets:
          type: array
          items:
            $ref: '#/components/schemas/TrainingSetFullDto'
          nullable: true
      additionalProperties: false
    TrainingRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isPublic:
          type: boolean
        sets:
          type: array
          items:
            $ref: '#/components/schemas/TrainingSetRequest'
          nullable: true
      additionalProperties: false
    TrainingSetFullDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        exerciseId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        set:
          type: integer
          format: int32
        reps:
          type: integer
          format: int32
        comment:
          type: string
          nullable: true
      additionalProperties: false
    TrainingSetRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        exerciseId:
          type: integer
          format: int32
        set:
          type: integer
          format: int32
        reps:
          type: integer
          format: int32
        comment:
          type: string
          nullable: true
      additionalProperties: false
    TrainingSetShortDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    TrainingSetShortDtoResponseData:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        records:
          type: array
          items:
            $ref: '#/components/schemas/TrainingSetShortDto'
          nullable: true
      additionalProperties: false
    TwoFactorRequest:
      type: object
      properties:
        enable:
          type: boolean
          nullable: true
        twoFactorCode:
          type: string
          nullable: true
        resetSharedKey:
          type: boolean
        resetRecoveryCodes:
          type: boolean
        forgetMachine:
          type: boolean
      additionalProperties: false
    TwoFactorResponse:
      type: object
      properties:
        sharedKey:
          type: string
          nullable: true
        recoveryCodesLeft:
          type: integer
          format: int32
        recoveryCodes:
          type: array
          items:
            type: string
          nullable: true
        isTwoFactorEnabled:
          type: boolean
        isMachineRemembered:
          type: boolean
      additionalProperties: false
    UserEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userName:
          type: string
          nullable: true
        normalizedUserName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        normalizedEmail:
          type: string
          nullable: true
        emailConfirmed:
          type: boolean
        passwordHash:
          type: string
          nullable: true
        securityStamp:
          type: string
          nullable: true
        concurrencyStamp:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        phoneNumberConfirmed:
          type: boolean
        twoFactorEnabled:
          type: boolean
        lockoutEnd:
          type: string
          format: date-time
          nullable: true
        lockoutEnabled:
          type: boolean
        accessFailedCount:
          type: integer
          format: int32
        following:
          type: array
          items:
            $ref: '#/components/schemas/UserEntity'
          nullable: true
        followers:
          type: array
          items:
            $ref: '#/components/schemas/UserEntity'
          nullable: true
      additionalProperties: false
    UserListRequest:
      type: object
      properties:
        skip:
          type: integer
          format: int32
        take:
          type: integer
          format: int32
        search:
          type: string
          nullable: true
        orderBy:
          $ref: '#/components/schemas/UserOrderByType'
        orderDirection:
          $ref: '#/components/schemas/OrderDirectionType'
      additionalProperties: false
    UserOrderByType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    UserShortDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        followersCount:
          type: integer
          format: int32
        followingCount:
          type: integer
          format: int32
      additionalProperties: false
    UserShortDtoResponseData:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        records:
          type: array
          items:
            $ref: '#/components/schemas/UserShortDto'
          nullable: true
      additionalProperties: false
  securitySchemes:
    oauth2:
      type: apiKey
      name: Authorization
      in: header